//
//  OnboardingView.swift
//  Prite_App
//
//  Created by David_ADA on 2023/02/15.
//

import Foundation
import SwiftUI
let description: [String] = [
    "üëã ÏïàÎÖïÌïòÏÑ∏Ïöî ÌîåÎùºÏù¥Ìä∏ÏûÖÎãàÎã§ \n ÏÇ¥Ïßù Í∞ëÏûëÏä§ÎüΩÏßÄÎßå \n Ïù¥ Ïï±ÏùÑ ÎßåÎì† Î∞∞Í≤ΩÏùÑ ÏïåÎ†§ÎìúÎ¶¨Í≥†Ïã∂ÏäµÎãàÎã§.",
    "üìù Ïö∞Î¶¨Îäî ÏÉùÍ∞ÅÎ≥¥Îã§ \n Í∏ÄÏì∞Í∏∞ÎùºÎäî Ï∞ΩÏûëÌôúÎèôÏóê ÎåÄÌï¥ÏÑú \n ÎßéÏùÄ Ïñ¥Î†§ÏõÄÏùÑ ÎäêÎÅºÍ≥†ÏûàÏäµÎãàÎã§",
    "üìí Í∑∏ÎûòÏÑú Ïñ∏Ï†ú Ïñ¥ÎîîÏÑúÎÇò \n Í∏ÄÏì∞Í∏∞Î•º ÏâΩÍ≤å ÏãúÏûëÌï†ÏàòÏûàÍ≤å \n Í∏ÄÏùÑ Ïì∏ÏàòÏûàÎäî Ïï±Ïù¥ ÏûàÎã§Î©¥ Ï¢ãÎã§Í≥† ÏÉùÍ∞ÅÌñàÏäµÎãàÎã§",
    "üß≠ ÌîåÎùºÏù¥Ìä∏Î•º ÌÜµÌï¥ \n Í∏ÄÏì∞Í∏∞ÌïòÏó¨ Î¶¨Ïä§Ìä∏Î°ú Ï†ÄÏû•ÌïòÍ≥† ÏßÄÎèÑÏóê ÌëúÏãúÎêú Ïã¨Î≥ºÏùÑ ÌÜµÌï¥ÏÑúÎèÑ \n ÎÇ¥ Í∏ÄÏùÑ ÌôïÏù∏Ìï¥Î≥ºÏàòÏûàÏäµÎãàÎã§"
]

struct OnboardingContent: View {
    @Binding var onboardingSheet:Bool
    @Binding var onboardingNumber:Int
    var body: some View {
        VStack(alignment:.center, spacing: 40) {
            Image("onboarding\(onboardingNumber)")
                .resizable()
                .frame(maxHeight:400)
                .ignoresSafeArea()
            Text(description[onboardingNumber])
                .font(.title)
                .multilineTextAlignment(.center)
            Spacer()
        }
    }
}
struct OnboardingButton: View {
    @State private var animate = false
    @Binding var onboardingNumber:Int
    @Binding var onboardingSheet:Bool
    @AppStorage("Onboarding") private var onboarding: Bool = true
    var body: some View {
        GeometryReader { proxy in
            LazyHStack(spacing:proxy.size.width / 2)  {
                Button {
                    withAnimation {
                        if self.onboardingNumber >= 1 {
                            self.onboardingNumber -= 1
                        }
                    }
                } label: {
                    Text("‚è™Ô∏è Ïù¥Ï†Ñ")
                        .font(.largeTitle)
                        .opacity(animate ? 0.2 : 0.8)
                        .animation(Animation.easeOut(duration: 2.0).repeatForever(), value: animate)
                        .onAppear {
                            self.animate = true
                        }
                }.opacity(self.onboardingNumber == 0 ? 0.0 : 1.0)
                Button {
                    withAnimation {
                        if self.onboardingNumber <= 2 {
                            self.onboardingNumber += 1
                        } else if self.onboardingNumber == 3 {
                            onboardingSheet = false
                            onboarding = onboardingSheet
                        }
                    }
                } label: {
                    Text(self.onboardingNumber == 3 ? "ÏãúÏûëüèöÔ∏è" : "Îã§Ïùå ‚è©Ô∏è")
                        .font(.largeTitle)
                        .opacity(animate ? 0.2 : 0.8)
                        .animation(Animation.easeOut(duration: 2.0).repeatForever(), value: animate)
                        .onAppear {
                            self.animate = true
                        }
                }
            }
            .frame(width: proxy.size.width, height: proxy.size.height)
            .position(x:proxy.size.width / 2, y: proxy.size.height / 2)
        }
    }
}
struct OnboardingView: View {
    @Binding var onboardingSheet:Bool
    @State private var onboardingNumber:Int = 0
    var body: some View {
            ZStack {
                OnboardingContent(onboardingSheet: $onboardingSheet, onboardingNumber: $onboardingNumber)
                OnboardingButton(onboardingNumber: $onboardingNumber, onboardingSheet: $onboardingSheet)
                OnboardingSkipButton(onboardingSheet: $onboardingSheet)
        }
    }
}
struct OnboardingSkipButton: View {

    @AppStorage("Onboarding") private var onboarding: Bool = true
    @Binding var onboardingSheet:Bool
    
    var body: some View {
        GeometryReader { proxy in
            LazyHStack {
                Button(action: {
                    onboardingSheet = false
                    onboarding = onboardingSheet
                }) {
                    Text("Ïï±Ïóê ÎåÄÌïú ÏÑ§Î™Ö Í±¥ÎÑàÎõ∞Í∏∞ üñêÔ∏è")
                    .padding(.horizontal, 40)
                    .padding(.vertical, 15)
                    .font(Font.title2.bold().lowercaseSmallCaps())
                }
                .background(Color.blue)
                .foregroundColor(.black)
                .cornerRadius(40)
                .frame(minWidth: 0, maxWidth: proxy.size.width-40)
            }
            .frame(width: proxy.size.width, height: proxy.size.height / 5)
            .position(x:proxy.size.width / 2, y: proxy.size.height - 50)
        }
    }
}

struct Previews_OnboardingView_Previews: PreviewProvider {
    static var previews: some View {
        OnboardingView(onboardingSheet: .constant(true))
    }
}
